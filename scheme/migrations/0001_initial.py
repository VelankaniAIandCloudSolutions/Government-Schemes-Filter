# Generated by Django 3.2.5 on 2023-04-12 04:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AgeGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_group', models.CharField(choices=[('0-6', '0-6'), ('7-15', '7-15'), ('16-30', '16-30'), ('31-58', '31-58'), ('58-200', '58-200')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Caste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caste', models.CharField(choices=[('General', 'General'), ('Scheduled Caste', 'Scheduled Caste'), ('Scheduled Tribe', 'Scheduled Tribe'), ('Other Backward Class', 'Other Backward Class'), ('Economically Weaker Section', 'Economically Weaker Section')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=255)),
                ('is_central_sector', models.BooleanField(default=False)),
                ('is_centrally_sponsored', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Disability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disability', models.CharField(choices=[('Full', 'Full'), ('Partial', 'Partial'), ('None', 'None')], default='None', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education', models.CharField(choices=[('Diploma', 'Diploma'), ("Bachelor's", "Bachelor's"), ('Masters', 'Masters'), ('PHD', 'PHD'), ('High School', 'High School'), ('Middle School', 'Middle School')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='IncomeGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('income_group', models.CharField(choices=[('0-100000', '0-100000'), ('100000-500000', '100000-500000'), ('500000-1000000', '500000-1000000'), ('1000000-2500000', '1000000-2500000'), ('2500000-4500000', '2500000-4500000'), ('4500000-100000000', '4500000-100000000')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='MaritalStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ministry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ministry_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Occupation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occupation', models.CharField(choices=[('Unemployed', 'Unemployed'), ('Farmer', 'Farmer'), ('Fisherman', 'Fisherman')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PrimaryGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_group_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(choices=[('Andaman and Nicobar Islands', 'Andaman and Nicobar Islands'), ('Andhra Pradesh', 'Andhra Pradesh'), ('Arunachal Pradesh', 'Arunachal Pradesh'), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chandigarh', 'Chandigarh'), ('Chhattisgarh', 'Chhattisgarh'), ('Dadra and Nagar Haveli and Daman and Diu', 'Dadra and Nagar Haveli and Daman and Diu'), ('Delhi', 'Delhi'), ('Goa', 'Goa'), ('Gujarat', 'Gujarat'), ('Haryana', 'Haryana'), ('Himachal Pradesh', 'Himachal Pradesh'), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Ladakh', 'Ladakh'), ('Lakshadweep', 'Lakshadweep'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Odisha', 'Odisha'), ('Puducherry', 'Puducherry'), ('Punjab', 'Punjab'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttar Pradesh', 'Uttar Pradesh'), ('Uttarakhand', 'Uttarakhand'), ('West Bengal', 'West Bengal')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Scheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme_name', models.CharField(max_length=255)),
                ('is_rural', models.BooleanField(default=False)),
                ('is_urban', models.BooleanField(default=False)),
                ('sector', models.CharField(blank=True, max_length=100, null=True)),
                ('is_central_sector', models.BooleanField(default=False)),
                ('is_centrally_sponsored', models.BooleanField(default=False)),
                ('scheme_type', models.CharField(choices=[('Individual', 'Individual'), ('Non-Individual', 'Non-Individual')], default='Individual', max_length=50)),
                ('link', models.URLField(blank=True, null=True)),
                ('age_groups_applicable', models.ManyToManyField(blank=True, null=True, to='scheme.AgeGroup')),
                ('castes_applicable', models.ManyToManyField(blank=True, null=True, to='scheme.Caste')),
                ('categories', models.ManyToManyField(blank=True, null=True, to='scheme.Category')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheme.department')),
                ('disabilities_applicable', models.ManyToManyField(blank=True, null=True, to='scheme.Disability')),
                ('districts_applicable', models.ManyToManyField(blank=True, null=True, to='scheme.District')),
                ('education_applicable', models.ManyToManyField(blank=True, null=True, to='scheme.Education')),
                ('genders_applicable', models.ManyToManyField(blank=True, null=True, to='scheme.Gender')),
                ('income_groups_applicable', models.ManyToManyField(blank=True, null=True, to='scheme.IncomeGroup')),
                ('marital_status_applicable', models.ManyToManyField(blank=True, null=True, to='scheme.MaritalStatus')),
                ('ministry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheme.ministry')),
                ('occupation_applicable', models.ManyToManyField(blank=True, null=True, to='scheme.Occupation')),
                ('states_applicable', models.ManyToManyField(blank=True, null=True, to='scheme.State')),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='ministry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheme.ministry'),
        ),
        migrations.AddField(
            model_name='category',
            name='primary_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheme.primarygroup'),
        ),
    ]
